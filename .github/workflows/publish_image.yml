name: publish-image

on:
  push:
    branches:
      - main

jobs:
  docker:
    if: github.repository == 'DerOetzi/habapp_extended'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        version: ['Develop']
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Prepare Metadata
        id: prep
        run: |
          HABAPP_VERSION=${{ matrix.version }}

          DOCKER_IMAGE="deroetzi/habapp_extended"
          TAGS="latest"

          PLATFORMS="linux/amd64"

          echo ${DOCKER_IMAGE}
          echo ${TAGS}
          echo ${PLATFORMS}

          # Set output parameters.
          echo ::set-output name=habapp_version::${HABAPP_VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=platforms::${PLATFORMS}
          echo ::set-output name=docker_image::${DOCKER_IMAGE}
          echo ::set-output name=build_date::$(date +"%Y-%m-%dT%H:%M:%SZ")

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: ${{ steps.prep.outputs.platforms }}
          build-args: |
            HABAPP_VERSION=${{ steps.prep.outputs.habapp_version }}
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.version=${{ steps.prep.outputs.habapp_version }}
            org.opencontainers.image.created=${{ steps.prep.outputs.build_date }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.prep.outputs.tags }}